{"ast":null,"code":"var _jsxFileName = \"/Users/corbinbrockbank/dev/uubc/homework/19-homework/react-click-game/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport CreateCard from \"./components/cards\";\nimport clickers from \"./clickers.json\";\nimport Wrapper from \"./components/wrapper\";\nimport Header from \"./components/Header\"; // import Footer from \"./components/Footer\"\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clickers,\n      score: 0,\n      highscore: 0\n    };\n\n    this.handleClick = event => {\n      console.log(\"Clicked\"); //get id of the card yu clicked off first event.target.cardId\n\n      const imageClick = event.target.cardID; //grab the cards array off state\n\n      clickers; //find the card object on state and see if its been clicked\n      // if its been clicked \n      //you lost and reset\n      //if it hasent been clicked \n      //shuffle them\n      //find the object in the array you clicked on\n      //update a clicked value to be true on the object in the array\n      //set that new array you returned that has the object updated on it to state\n      //react will re render\n    };\n  }\n\n  GameOver() {}\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.state.clickers.map(clickers => React.createElement(CreateCard, {\n      id: clickers.id,\n      key: clickers.id,\n      image: clickers.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/corbinbrockbank/dev/uubc/homework/19-homework/react-click-game/click-game/src/App.js"],"names":["React","Component","CreateCard","clickers","Wrapper","Header","App","state","score","highscore","handleClick","event","console","log","imageClick","target","cardID","GameOver","render","map","id","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BM,KAH0B,GAGlB;AACNJ,MAAAA,QADM;AAENK,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAHkB;;AAAA,SAS5BC,WAT4B,GASbC,KAAD,IAAW;AAEvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAFuB,CAIrB;;AACF,YAAMC,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAaC,MAAhC,CALuB,CAOrB;;AACAb,MAAAA,QAAQ,CARa,CAUrB;AAEA;AACE;AACF;AACE;AACA;AACA;AACA;AACA;AACH,KA7ByB;AAAA;;AA+B1Bc,EAAAA,QAAQ,GAAG,CAEV;;AAIDC,EAAAA,MAAM,GAAG;AACP,WAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG,KAAKX,KAAL,CAAWJ,QAAX,CAAoBgB,GAApB,CAAwBhB,QAAQ,IAC/B,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEA,QAAQ,CAACiB,EADf;AAEE,MAAA,GAAG,EAAEjB,QAAQ,CAACiB,EAFhB;AAGE,MAAA,KAAK,EAAEjB,QAAQ,CAACkB,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CAFF;AAeD;;AArDyB;;AAuD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport CreateCard from \"./components/cards\"\nimport clickers from \"./clickers.json\";\nimport Wrapper from \"./components/wrapper\"\nimport Header from \"./components/Header\"\n// import Footer from \"./components/Footer\"\n\nclass App extends Component {\n  \n  // Setting this.state.friends to the friends json array\n  state = {\n    clickers,\n    score: 0,\n    highscore: 0\n  };\n\nhandleClick = (event) => {\n\n  console.log(\"Clicked\")\n    \n    //get id of the card yu clicked off first event.target.cardId\n  const imageClick = event.target.cardID\n\n    //grab the cards array off state\n    clickers\n\n    //find the card object on state and see if its been clicked\n\n    // if its been clicked \n      //you lost and reset\n    //if it hasent been clicked \n      //shuffle them\n      //find the object in the array you clicked on\n      //update a clicked value to be true on the object in the array\n      //set that new array you returned that has the object updated on it to state\n      //react will re render\n  }\n\n  GameOver() {\n\n  }\n\n  \n\n  render() {\n    return(\n      \n      <Wrapper>\n        <Header />\n      {/* Add title */}\n        {this.state.clickers.map(clickers => (\n          <CreateCard\n            id={clickers.id}\n            key={clickers.id}\n            image={clickers.image}\n            />\n        ))}\n        {/* <Footer /> */}\n      </Wrapper>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}