{"ast":null,"code":"var _jsxFileName = \"/Users/corbinbrockbank/dev/uubc/homework/19-homework/react-click-game/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport CreateCard from \"./components/cards\";\nimport clickers from \"./clickers.json\";\nimport Wrapper from \"./components/wrapper\";\nimport Header from \"./components/Header\"; // import Footer from \"./components/Footer\"\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clickers,\n      score: 0,\n      highscore: 0 // add clicked false\n\n    };\n\n    this.imageClicked = id => {\n      // console.log(\"Worked from App.js\")\n      // get the ID of the card that is clicked on\n      const imageClick = id; // console.log(imageClick)\n      //grab the cards array off state\n\n      const clicked = this.state.clickers; // console.log(clicked)\n      // this becomes the index in the array that was clicked\n\n      let indexOfCardClicked; //find the card object on state \n\n      clicked.find(function (element, index) {\n        if (element.id === imageClick) {\n          // return the index that was clicked\n          // index will become the \"returnedArray\"\n          indexOfCardClicked = index;\n          return index;\n        } else {\n          return false;\n        }\n      }); // console.log(indexOfCardClicked);\n      // see if it has been clicked\n      // console.log(clicked[indexOfCardClicked].buttonClicked)\n      // if its === true (has been clicked) call \"gameOver\" & reset\n\n      if (clicked[indexOfCardClicked].buttonClicked === true) {// game over function needs to be created\n      } else {\n        this.setState({\n          score\n        }); // ELSE\n        //if it hasent been clicked \n        //shuffle them\n        //find the object in the array you clicked on\n        //update a clicked value to be true on the object in the array\n        //set that new array you returned that has the object updated on it to state\n        //react will re render\n      } // console.log(returnedArray)\n\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), this.state.clickers.map(clickers => React.createElement(CreateCard, {\n      id: clickers.id,\n      key: clickers.id,\n      image: clickers.image,\n      handleClick: this.imageClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/corbinbrockbank/dev/uubc/homework/19-homework/react-click-game/click-game/src/App.js"],"names":["React","Component","CreateCard","clickers","Wrapper","Header","App","state","score","highscore","imageClicked","id","imageClick","clicked","indexOfCardClicked","find","element","index","buttonClicked","setState","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAGA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BM,KAH0B,GAGlB;AACNJ,MAAAA,QADM;AAENK,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE,CAHL,CAIN;;AAJM,KAHkB;;AAAA,SAY1BC,YAZ0B,GAYXC,EAAE,IAAI;AAEnB;AAEA;AACA,YAAMC,UAAU,GAAGD,EAAnB,CALmB,CAMnB;AAGA;;AACA,YAAME,OAAO,GAAG,KAAKN,KAAL,CAAWJ,QAA3B,CAVmB,CAWnB;AAEA;;AACA,UAAIW,kBAAJ,CAdmB,CAgBnB;;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACpC,YAAID,OAAO,CAACL,EAAR,KAAeC,UAAnB,EAA+B;AAC7B;AACA;AACAE,UAAAA,kBAAkB,GAAGG,KAArB;AACA,iBAAOA,KAAP;AACD,SALD,MAKO;AACL,iBAAO,KAAP;AACD;AACF,OATD,EAjBmB,CA4BvB;AAGA;AAEA;AAKI;;AACA,UAAIJ,OAAO,CAACC,kBAAD,CAAP,CAA4BI,aAA5B,KAA8C,IAAlD,EAAwD,CAEtD;AACD,OAHD,MAGO;AAEP,aAAKC,QAAL,CAAc;AAACX,UAAAA;AAAD,SAAd,EAFO,CAKT;AACA;AACE;AACA;AACA;AACA;AACA;AACC,OAtDkB,CA2DnB;;AACD,KAxEyB;AAAA;;AA4E1BY,EAAAA,MAAM,GAAG;AACP,WAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG,KAAKb,KAAL,CAAWJ,QAAX,CAAoBkB,GAApB,CAAwBlB,QAAQ,IAC/B,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEA,QAAQ,CAACQ,EADf;AAEE,MAAA,GAAG,EAAER,QAAQ,CAACQ,EAFhB;AAGE,MAAA,KAAK,EAAER,QAAQ,CAACmB,KAHlB;AAIE,MAAA,WAAW,EAAI,KAAKZ,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CAFF;AAeD;;AA5FyB;;AA8F5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport CreateCard from \"./components/cards\"\nimport clickers from \"./clickers.json\";\nimport Wrapper from \"./components/wrapper\"\nimport Header from \"./components/Header\"\n\n\n// import Footer from \"./components/Footer\"\n\nclass App extends Component {\n  \n  // Setting this.state.friends to the friends json array\n  state = {\n    clickers,\n    score: 0,\n    highscore: 0\n    // add clicked false\n  };\n\n  \n\n  imageClicked = id => {\n\n    // console.log(\"Worked from App.js\")\n    \n    // get the ID of the card that is clicked on\n    const imageClick = id\n    // console.log(imageClick)\n   \n\n    //grab the cards array off state\n    const clicked = this.state.clickers\n    // console.log(clicked)\n\n    // this becomes the index in the array that was clicked\n    let indexOfCardClicked;\n\n    //find the card object on state \n    clicked.find(function(element, index) {\n      if (element.id === imageClick) {\n        // return the index that was clicked\n        // index will become the \"returnedArray\"\n        indexOfCardClicked = index;\n        return index;\n      } else {\n        return false;\n      }\n    });\n\n// console.log(indexOfCardClicked);\n\n\n// see if it has been clicked\n\n// console.log(clicked[indexOfCardClicked].buttonClicked)\n    \n\n\n    \n    // if its === true (has been clicked) call \"gameOver\" & reset\n    if (clicked[indexOfCardClicked].buttonClicked === true) {\n        \n      // game over function needs to be created\n    } else {\n\n    this.setState({score})\n      \n      \n  // ELSE\n  //if it hasent been clicked \n    //shuffle them\n    //find the object in the array you clicked on\n    //update a clicked value to be true on the object in the array\n    //set that new array you returned that has the object updated on it to state\n    //react will re render\n    }\n\n\n\n\n    // console.log(returnedArray)\n  }\n\n  \n\n  render() {\n    return(\n      \n      <Wrapper>\n        <Header />\n      {/* Add title */}\n        {this.state.clickers.map(clickers => (\n          <CreateCard\n            id={clickers.id}\n            key={clickers.id}\n            image={clickers.image}\n            handleClick = {this.imageClicked}\n            />\n        ))}\n      </Wrapper>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}